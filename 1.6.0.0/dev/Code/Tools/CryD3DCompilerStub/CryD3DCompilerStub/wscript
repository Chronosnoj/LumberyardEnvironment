########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#
# Original file Copyright Crytek GMBH or its affiliates, used under license.
#
########################################################################################

def build(bld):

    bld.CryEngineModule(

        #==============================
        # Settings
        #==============================
        target                  = 'CryD3DCompilerStub',
        vs_filter               = 'Tools',
        file_list               = 'cryd3dcompilerstub.waf_files',
        platforms               = ['all'],
        configurations          = ['all'],
        pch                     = 'stdafx.cpp',

        #==============================
        # Common
        #==============================

        #==============================
        # Windows
        #==============================
        win_debug_linkflags         = '/NODEFAULTLIB:LIBCMTD.lib',
        win_profile_linkflags       = '/NODEFAULTLIB:LIBCMT.lib',
        win_release_linkflags       = '/NODEFAULTLIB:LIBCMT.lib',
        win_performance_linkflags   = '/NODEFAULTLIB:LIBCMT.lib',
        win_lib                 = ['kernel32','CryD3DCompilerStub'],

        #==============================
        # Windows/x64
        #==============================
        win_x64_libpath         = [	bld.Path('Code/Tools/CryD3DCompilerStub/CryD3DCompilerStub'),
                                    bld.Path('Code/Tools/CryD3DCompilerStub/Build/46/x64')]
    )

