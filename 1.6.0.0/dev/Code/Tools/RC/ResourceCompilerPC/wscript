########################################################################################
# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#
#
# Original file Copyright Crytek GMBH or its affiliates, used under license.
#
########################################################################################

def build(bld):

    bld.CryResourceCompilerModule(
        #==============================
        # Settings
        #==============================
        target                  = 'ResourceCompilerPC',
        vs_filter               = 'RC',
        file_list               = 'resourcecompilerpc.waf_files',
        platforms               = ['win'],
        configurations          = ['debug_all', 'profile_all'],

        #==============================
        # Common
        #==============================
        cxxflags                = '/GR',
        use                     = ['lua', 'AzToolsFramework'],
        includes                = [ '.',
                                bld.Path('Code/Tools'),
                                bld.Path('Code/Tools/RC/ResourceCompiler'),
                                bld.Path('Code/Tools/CryCommonTools'),
                                bld.Path('Code/CryEngine/Cry3DEngine'),
                                bld.Path('Code/CryEngine/CryScriptSystem'),
                                bld.Path('Code/Sandbox'),
                                bld.Path('Code/Tools/SDKs/Alembic/alembic/include'),
                                bld.Path('Code/Tools/SDKs/Alembic/ilmbase/include/OpenEXR')],
        autod_uselib            = [ 'QT5CORE',
                                    'QT5GUI',
                                    'QT5WIDGETS'],

        lib                     = [ 'Gdi32',
                                    'Shell32',
                                    'Ole32' ],

        defines                 = [ 'CRYTOOLS',
                                    'RESOURCECOMPILERPC_EXPORTS',
                                    'OFFLINE_COMPUTATION',
                                    'NOT_USE_CRY_MEMORY_MANAGER' ],
        enable_rtti             = True,
        export_definitions      = 'ResourceCompilerPlugin.def',
        
        #==============================
        # Testing
        #==============================
        test_all_file_list  = ['resourcecompilerpc_test.waf_files'],
    )
