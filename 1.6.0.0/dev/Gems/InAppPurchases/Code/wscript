# All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
# its licensors.
#
# For complete copyright and license terms please see the LICENSE at the root of this
# distribution (the "License"). All use of this software is governed by the License,
# or, if provided, by the license below or the license accompanying this file. Do not
# remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

import os, shutil

def build(bld):

    # on Android we need to copy the billing AIDL file into the project for processing
    java_src_root = bld.path.make_node(os.path.join('Source', 'Android', 'java'))

    if 'android' in bld.env['PLATFORM']:
        android_home = bld.get_env_file_var('LY_ANDROID_SDK', required = True)
        source_file = os.path.join(android_home, 'extras', 'google', 'play_billing', 'IInAppBillingService.aidl')

        dest_directory = java_src_root.make_node(os.path.join('com', 'android', 'vending', 'billing'))

        if not os.path.exists(dest_directory.abspath()):
            dest_directory.mkdir()
            shutil.copy2(source_file, dest_directory.abspath())

    bld.DefineGem(
        # Add custom build options here
        includes        = [bld.Path('Code/CryEngine/CryAction')],
        file_list       = ['inapppurchases.waf_files'],
        use             = ['AZCore'],

        ios_file_list   = ['inapppurchases_ios.waf_files'],
        ios_cxxflags    = ['-x', 'objective-c++'],
        ios_framework   = ['StoreKit'],

        android_file_list           = [ 'inapppurchases_android.waf_files' ],
        android_java_src_path       = [ java_src_root.abspath() ],
        android_aidl_src_path       = [ java_src_root.abspath() ],
        android_use                 = ['SDL2'],
    )
