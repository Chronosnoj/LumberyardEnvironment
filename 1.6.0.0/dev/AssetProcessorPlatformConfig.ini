[Platforms]
pc=enabled
;es3=enabled
;ios=enabled
;osx_gl=enabled

; ---- The number of worker jobs, 0 means use the number of Logical Cores
[Jobs]
minJobs=1
maxJobs=0

; ---- add any metadata file type here that needs to be monitored by the AssetProcessor.
; Modifying these meta file will cause the source asset to re-compile again.
; They are specified in the following format
; metadata extension=original extension to replace
; if the metadata extension does not replace the original, then the original can be blank
; so for example if your normal file is blah.tif and your metafile for that file is blah.tif.exportsettings
; then your declaration would be exportsettings=   ; ie, it would be blank
; however if your metafile REPLACES the extension (for example, if you have the file blah.i_caf and its metafile is blah.exportsettings)
; then you specify the original extension here to narrow the scope.
; If a relative path to a specific file is provided instead of an extension, a change to the file will change all files
; with the associated extension (e.g. Animations/SkeletonList.xml=i_caf will cause all i_caf files to recompile when 
; Animations/SkeletonList.xml within the current game project changes)

[MetaDataTypes]
exportsettings=
animsettings=i_caf
Animations/SkeletonList.xml=i_caf
cbc=abc
fbx.assetinfo=fbx

; ---- add any folders to scan here.  The priority order is the order they appear here
; available macros are 
; @ROOT@ - the location of engineroot.txt
; @GAMENAME@ - the name of the current game project, for example 'RPGSample' 
; note that they are sorted by their 'order' value, and the lower the order the more important an asset is
; lower order numbers override higher ones.
; If specified, output will be prepended to every path found in that recognizer's watch folder

[ScanFolder Game]
watch=@ROOT@/@GAMENAME@
recursive=1
order=0

; gems will be auto-added from 100 onwards

[ScanFolder Root]
watch=@ROOT@
recursive=0
order=10000

[ScanFolder Engine]
watch=@ROOT@/Engine
recursive=1
order=20000

[ScanFolder Editor]
watch=@ROOT@/Editor
output=editor
recursive=1
order=30000

[ScanFolder FeatureTests]
watch=@ROOT@/@GAMENAME@FeatureTests
output=featuretests
recursive=1
order=5000


;Excludes files that match the pattern or glob 
; if you use a pattern, remember to escape your backslashes (\\)
[Exclude _LevelBackups]
pattern=.*\\/Levels\\/.*\\/_savebackup\\/.*

[Exclude _LevelAutoBackups]
pattern=.*\\/Levels\\/.*\\/_autobackup\\/.*

[Exclude AudioProject]
pattern=.*\\/Sounds\\/.*_project\\/.*

[Exclude HoldFiles]
pattern=.*\\/Levels\\/.*_hold\\/.*

[Exclude TempFiles]
pattern=.*\\/\$tmp[0-9]*_.*

[Exclude AlembicCompressionTemplates]
pattern=.*\\/Presets\\/GeomCache\\/.*

[Exclude TmpAnimationCompression]
pattern=.*\\/Editor\\/Tmp\\/AnimationCompression\\/.*

[Exclude EventLog]
pattern=.*\\/Editor\\/.*eventlog\\.xml 

;------------------------------------------------------------------------------
; RC params mapping examples
;------------------------------------------------------------------------------

; Use a regex for matching files, same params for all platforms
;[RC TGAs]
;pattern=.+\\.tga$
;params=/tga /texture

; Use a glob, have special params for es3 platform
;[RC TIFFs]
;glob=*.tif
;params=/texture
;es3=/pvrt

; You can also modify a version to compile all matching files again
; By default the version is empty
;[RC tif]
;glob=*.tif
;params = \\someparams
;version =1.0
; This will make the AssetProcessor compile all the .tif files again

; you can also optionally supply a priority.
; this is used to sort jobs when no other external circumstance sorts them
; for example, copy jobs will be higher in priority than other jobs that are not copy jobs
; however if they're both copy jobs or both not, and no other circumstances apply, then priority will be used.
; default priority is zero if not specified

; note that the FULL PATH to the file will be used as the match, not the relative path
; so ensure start your patterns with .* or as appropriate.
; Also, any rules which match will apply - so if you have two rules which both apply to PNG files for example
; but you only want one, you might want to use exclusion patterns:
 
;Example: process everything EXCEPT the ones in the libs/ui folder with these params
;[RC png-normal]
;pattern=(?!.*libs\\/ui\\/).*\\.png
;params=/imagecompressor=CTSquish /streaming=0
;lockSource=true

;Example:  Process everything in the libs/ui folder with linear color space
;[RC png-ui]
;pattern=(.*libs\\/ui\\/).*\\.png
;params=/imagecompressor=CTSquish /streaming=0 /colorspace=linear,linear
;lockSource=true

; More example Regexes:
; pattern=(?!(.*libs\\/ui\\/)|(.*editor\\/).*\\.png
; This pattern will not match anything with editor/ or libs/ui/ in it
; pattern=((.*libs\\/ui\\/)|(.*editor\\/).*\\.png
; This pattern will only match anything with editor/ or libs/ui/ in it

;Give every [Section Name] its own unique Name or else they will overwrite each other!

[RC i_caf]
glob=*.i_caf
params=/cafAlignTracks=1 /animConfigFolder=Animations /skipdba=1 /refresh=1
priority=5 

[RC caf]
glob=*.caf
params=copy

[RC img]
glob=*.img
params=copy

[RC dba]
glob=*.dba
params=copy

[RC cgf]
glob=*.cgf
params=/VertexPositionFormat=exporter /VertexIndexFormat=u32 
lockSource=true
priority=10 
; allow CGF files to compile first, so untextured models appear before their textures for faster startup
; other available params: /SplitLODs=1 


[RC tif]
glob=*.tif
pc=/imagecompressor=CTSquish /streaming=1
es3=/imagecompressor=CTSquish /streaming=0
ios=/imagecompressor=CTSquish /streaming=0
osx_gl=/imagecompressor=CTSquish /streaming=1
; Streaming = 1 splits files.
lockSource=true

[RC dds]
glob=*.dds
params=copy

[RC dds splits]
glob=*.dds.*
params=copy

[RC fbx]
glob=*.fbx

[RC chr]
glob=*.chr
params=copy

[RC skin]
glob=*.skin
params=copy

[RC cfg]
glob=*.cfg
params=copy

[RC cfi]
glob=*.cfi
params=copy

[RC cfx]
glob=*.cfx
params=copy

[RC cga]
glob=*.cga
params=/VertexPositionFormat=exporter 

; Warning: If you change the VertexIndexFormat, make sure you update the vtx_idx typedef in Code\CryEngine\CryCommon\ProjectDefines.h
[RC abc]
glob=*.abc
params=/SkipFilesWithoutBuildConfig=0 /VertexIndexFormat=u32
orbis=/SkipFilesWithoutBuildConfig=0 /VertexIndexFormat=u16
es3=/SkipFilesWithoutBuildConfig=0 /VertexIndexFormat=u16
ios=/SkipFilesWithoutBuildConfig=0 /VertexIndexFormat=u16

[RC bmp]
glob=*.bmp
pc=/imagecompressor=CTSquish /streaming=0
es3=/imagecompressor=CTSquish /streaming=0
ios=/imagecompressor=CTSquish /streaming=0
osx_gl=/imagecompressor=CTSquish /streaming=0
; Streaming = 1 splits files.
lockSource=true

[RC gif]
glob=*.gif
pc=/imagecompressor=CTSquish /streaming=0
es3=/imagecompressor=CTSquish /streaming=0
ios=/imagecompressor=CTSquish /streaming=0
osx_gl=/imagecompressor=CTSquish /streaming=0
; Streaming = 1 splits files.
lockSource=true

[RC jpg]
glob=*.jpg
pc=/imagecompressor=CTSquish /streaming=0
es3=/imagecompressor=CTSquish /streaming=0
ios=/imagecompressor=CTSquish /streaming=0
osx_gl=/imagecompressor=CTSquish /streaming=0
; Streaming = 1 splits files.
lockSource=true

[RC jpeg]
glob=*.jpeg
pc=/imagecompressor=CTSquish /streaming=0
es3=/imagecompressor=CTSquish /streaming=0
ios=/imagecompressor=CTSquish /streaming=0
osx_gl=/imagecompressor=CTSquish /streaming=0
; Streaming = 1 splits files.
lockSource=true

[RC tga]
glob=*.tga
pc=/imagecompressor=CTSquish /streaming=0
es3=/imagecompressor=CTSquish /streaming=0
ios=/imagecompressor=CTSquish /streaming=0
osx_gl=/imagecompressor=CTSquish /streaming=0
; Streaming = 1 splits files.
lockSource=true

; Process all PNGs using default settings EXCEPT for pngs under the editor folder
[RC png]
pattern=(?!.*editor\\/).*\\.png
params=/imagecompressor=CTSquish /streaming=0
lockSource=true

; In addition to the above rule which processes PNGs into DDS files, also
; copy the editor icons so that the program can read the actual source png file.
[RC editor icons]
pattern=.*editor\\/.*\\.png
params=copy

[RC anm]
glob=*.anm
params=copy

[RC gfx]
glob=*.gfx
params=copy

[RC usm]
glob=*.usm
params=copy

[RC animevents]
glob=*.animevents
params=copy

[RC adb]
glob=*.adb
params=copy

[RC bspace]
glob=*.bspace
params=copy

[RC cdf]
glob=*.cdf
params=copy

[RC chrparams]
glob=*.chrparams
params=copy

[RC comb]
glob=*.comb
params=copy

[RC dlg]
glob=*.dlg
params=copy

[RC ent]
glob=*.ent
params=copy

[RC fsq]
glob=*.fsq
params=copy

[RC fxl]
glob=*.fxl
params=copy

[RC ik]
glob=*.ik
params=copy

[RC csv]
glob=*.csv
params=copy

[RC json]
glob=*.json
params=copy

[RC lmg]
glob=*.lmg
params=copy

[RC mtl]
glob=*.mtl
params=copy

[RC smtl]
glob=*.smtl
params=copy

[RC sub]
glob=*.sub
params=copy

[RC sbsar]
glob=*.sbsar
params=copy

[RC setup]
glob=*.setup
params=copy

[RC xml]
glob=*.xml
params=copy

[RC fontfamily]
glob=*.fontfamily
params=copy

[RC Editor Slice Copy]
glob=*.slice
params=copy

[RC Dynamic Slice Compile]
glob=*.slice

[RC node]
glob=*.node
params=copy

[RC veg]
glob=*.veg
params=copy

[RC lyr]
glob=*.lyr
params=copy

[RC dat]
glob=*.dat
params=copy

[RC lua]
glob=*.lua
params=copy

[RC lut]
glob=*.lut
params=copy

[RC txt]
glob=*.txt
params=copy

[RC usm]
glob=*.usm
params=copy

[RC bnk]
glob=*.bnk
params=copy

[RC wem]
glob=*.wem
params=copy

[RC fdp]
glob=*.fdp
params=copy

[RC cal]
glob=*.cal
params=copy

[RC grd]
glob=*.grd
params=copy

[RC grp]
glob=*.grp
params=copy

[RC xls]
glob=*.xls
params=copy

[RC ini]
glob=*.ini
params=copy

[RC ttf]
glob=*.ttf
params=copy

[RC otf]
glob=*.otf
params=copy

[RC ext]
glob=*.ext
params=copy

[RC pak]
glob=*.pak
params=copy

[RC ctc]
glob=*.ctc
params=copy

[RC prototype]
glob=*.prototype
params=copy

[RC uicanvas]
glob=*.uicanvas
params=copy

[RC uiprefab]
glob=*.uiprefab
params=copy

[RC sprite]
glob=*.sprite
params=copy

[RC bin]
glob=*.bin
params=copy

[RC pssl]
glob=*.pssl
params=copy

[RC inputbindings]
glob=*.inputbindings
params=copy

; Feature tests use the raw .tif files for the golden image comparison
[RC goldenimages]
pattern=.*GoldenImages\\/.*\\.tif
params=copy 
